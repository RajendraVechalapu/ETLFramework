<?xml version="1.0" encoding="utf-8"?>
<DataSchemaModel FileFormatVersion="1.2" SchemaVersion="2.9" DspName="Microsoft.Data.Tools.Schema.Sql.Sql130DatabaseSchemaProvider" CollationLcid="1033" CollationCaseSensitive="False" xmlns="http://schemas.microsoft.com/sqlserver/dac/Serialization/2012/02">
	<Header>
		<CustomData Category="AnsiNulls">
			<Metadata Name="AnsiNulls" Value="True" />
		</CustomData>
		<CustomData Category="QuotedIdentifier">
			<Metadata Name="QuotedIdentifier" Value="True" />
		</CustomData>
		<CustomData Category="CompatibilityMode">
			<Metadata Name="CompatibilityMode" Value="130" />
		</CustomData>
		<CustomData Category="Reference" Type="Assembly">
			<Metadata Name="LogicalName" Value="ETLFramework.dll" />
			<Metadata Name="FileName" Value="C:\USERS\VRSAN\DOCUMENTS\LEARNING\ETLFRAMEWORK\ETLFRAMEWORK\ETLFRAMEWORK\OBJ\DEBUG\ETLFRAMEWORK.DLL" />
			<Metadata Name="AssemblyName" Value="ETLFramework" />
			<Metadata Name="PermissionSet" Value="SAFE" />
			<Metadata Name="Owner" Value="" />
			<Metadata Name="GenerateSqlClrDdl" Value="True" />
			<Metadata Name="IsVisible" Value="True" />
			<Metadata Name="IsModelAware" Value="True" />
			<Metadata Name="SkipCreationIfEmpty" Value="True" />
			<Metadata Name="AssemblySymbolsName" Value="C:\Users\vrsan\Documents\Learning\ETLFramework\ETLFramework\ETLFramework\obj\Debug\ETLFramework.pdb" />
		</CustomData>
		<CustomData Category="SqlCmdVariables" Type="SqlCmdVariable" />
	</Header>
	<Model>
		<Element Type="SqlDatabaseOptions">
			<Property Name="Collation" Value="SQL_Latin1_General_CP1_CI_AS" />
			<Property Name="IsAnsiNullDefaultOn" Value="True" />
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Property Name="IsAnsiWarningsOn" Value="True" />
			<Property Name="IsArithAbortOn" Value="True" />
			<Property Name="IsConcatNullYieldsNullOn" Value="True" />
			<Property Name="IsTornPageProtectionOn" Value="False" />
			<Property Name="IsFullTextEnabled" Value="True" />
			<Property Name="PageVerifyMode" Value="3" />
			<Property Name="DefaultLanguage" Value="" />
			<Property Name="DefaultFullTextLanguage" Value="" />
			<Property Name="QueryStoreStaleQueryThreshold" Value="367" />
			<Relationship Name="DefaultFilegroup">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[PRIMARY]" />
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlProcedure" Name="[dbo].[1_spr_generateTableObjects]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN
--Run this script in Target Database, it will create table scripts
DECLARE @ID int, @SourceServer varchar(max),@SourceTable varchar(max),@SourceTableColumnNames varchar(max)
,@LandingTargetTable varchar(max),@TargetTable varchar(max),@HighWaterMarkColumn varchar(max),@AutoIdentityColumn varchar(max)

declare @TargetTableLandingCreationQuery varchar(max),@TargetTableCreationQuery varchar(max)

set @ID=(SELECT MIN(ID) FROM ETLFramework.ETL.SourceTablesDataLoadDetails)

WHILE (@ID IS NOT NULL)
BEGIN

SELECT 
@SourceServer=e.SourceServer,@SourceTable=e.SourceTable,@SourceTableColumnNames=e.SourceTableColumnNames
,@LandingTargetTable=e.LandingTargetTable,@TargetTable=e.TargetTable,@HighWaterMarkColumn=e.HighWaterMarkColumn,
@AutoIdentityColumn=e.AutoIdentityColumn
FROM ETLFramework.ETL.SourceTablesDataLoadDetails e WHERE ID=@ID

--SELECT @SourceQuery,@LandingTargetTable,@TargetTable

declare @dropLandingTargetTableIfExists varchar(max)='IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'''+@LandingTargetTable+''') AND type in (N''U''))
DROP TABLE '+@LandingTargetTable+''

declare @dropTargetTableIfExists varchar(max)='IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'''+@TargetTable+''') AND type in (N''U''))
DROP TABLE '+@TargetTable+''

print ''
print @dropLandingTargetTableIfExists
print ''
print @dropTargetTableIfExists

print ''
--exec(@dropTableIfExists)

SET @SourceTableColumnNames=REPLACE(@SourceTableColumnNames,isnull(@AutoIdentityColumn,''),' 1 as '+isnull(@AutoIdentityColumn,'')+'')

SET @TargetTableLandingCreationQuery='SELECT '+replace(@SourceTableColumnNames,isnull(@HighWaterMarkColumn,''),'cast('+isnull(@HighWaterMarkColumn,'')+' as varbinary(8)) '+isnull(@HighWaterMarkColumn,'')+' ')+', 
	getdate() as CreatedAsAt, getdate() ModifiedAsAt,null as ETLBatchLogId INTO '+@LandingTargetTable+' FROM '+@SourceServer+'.'+@SourceTable+' where 1=0'

SET @TargetTableCreationQuery='SELECT '+replace(@SourceTableColumnNames,isnull(@HighWaterMarkColumn,''),'cast('+isnull(@HighWaterMarkColumn,'')+' as varbinary(8)) '+isnull(@HighWaterMarkColumn,'')+' ')+', 
	getdate() as CreatedAsAt, getdate() ModifiedAsAt,null as ETLBatchLogId INTO '+@TargetTable+' FROM '+@SourceServer+'.'+@SourceTable+' where 1=0'

print @TargetTableLandingCreationQuery
print ''
print @TargetTableCreationQuery
--exec(@TargetTableLandingCreationQuery)
--exec(@TargetTableCreationQuery)
	

set @ID=(SELECT MIN(ID) FROM ETLFramework.ETL.SourceTablesDataLoadDetails WHERE ID > @ID)
END



END]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="Length" Value="2638" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="CREATE proc [dbo].[1_spr_generateTableObjects]&#xD;&#xA;as" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[dbo].[2_spr_GenerateDataLoadQueries]">
			<Property Name="BodyScript">
				<Value><![CDATA[

BEGIN
--Run this script in Target Database, it will create table scripts
DECLARE @ID int, @SourceServer varchar(max),@SourceTable varchar(max),@SourceTableColumnNames varchar(max)
,@LandingTargetTable varchar(max),@TargetTable varchar(max),@HighWaterMarkColumn varchar(max),@srcMergeSchemaName varchar(max),@srcMergeTableName varchar(max)

declare @TargetTableLandingCreationQuery varchar(max),@TargetTableCreationQuery varchar(max),@HighWaterMarkQuery varchar(max)
,@LandingTableFromQuery varchar(max),@LandingTableToQuery varchar(max)
,@TargetTableFromQuery varchar(max),@TargetTableToQuery varchar(max),@SQLQuery VARCHAR(MAX),@KeyJoinColumns varchar(max)

set @ID=(SELECT MIN(ID) FROM ETLFramework.ETL.SourceTablesDataLoadDetails)

PRINT('exec ETLFramework.dbo.spr_BatchStart

DECLARE @BatchLogID int
set @BatchLogID=(SELECT ISNULL(MAX(BatchLogID),1) FROM ETLFRAMEWORK.ETL.BatchLog)')

print ''

WHILE (@ID IS NOT NULL)
BEGIN

SELECT 
@SourceServer=e.SourceServer,@SourceTable=e.SourceTable,@SourceTableColumnNames=e.SourceTableColumnNames
,@LandingTargetTable=e.LandingTargetTable,@TargetTable=e.TargetTable,@HighWaterMarkColumn=e.HighWaterMarkColumn,
@KeyJoinColumns=e.KeyColumns
FROM ETLFramework.ETL.SourceTablesDataLoadDetails e WHERE ID=@ID

--SELECT @SourceQuery,@LandingTargetTable,@TargetTable

--Landing DataLoad


SET @LandingTableToQuery='INSERT INTO '+@LandingTargetTable+' ('+@SourceTableColumnNames+',CreatedAsAt,ModifiedAsAt,ETLBatchLogId)'
SET @LandingTableFromQuery='SELECT '+replace(@SourceTableColumnNames,isnull(@HighWaterMarkColumn,''),'cast('+isnull(@HighWaterMarkColumn,'')+' as varbinary(8)) '+isnull(@HighWaterMarkColumn,'')+' ')+', 
	getdate() as CreatedAsAt, getdate() ModifiedAsAt,@BatchLogID FROM '+@SourceServer+'.'+@SourceTable+' '

SET @SQLQuery=@LandingTableToQuery+@LandingTableFromQuery

IF @HighWaterMarkColumn IS NOT NULL
BEGIN
SET @HighWaterMarkQuery= 'DECLARE @HighWaterMarkValue BIGINT=(SELECT ISNULL(MAX(CAST('+@HighWaterMarkColumn+' AS BIGINT)),0) FROM '+@TargetTable+')'
SET @SQLQuery=@HighWaterMarkQuery+@SQLQuery
SET @SQLQuery=@SQLQuery+ 'WHERE '+@HighWaterMarkColumn+'>=@HighWaterMarkValue'
END

SELECT @SQLQuery

--SELECT @LandingTargetTable

SELECT @srcMergeSchemaName=TABLE_SCHEMA,@srcMergeTableName=TABLE_NAME 
FROM targetdb.INFORMATION_SCHEMA.TABLES
WHERE '['+TABLE_SCHEMA+'].['+TABLE_NAME+']'=@LandingTargetTable

if @KeyJoinColumns is not null
begin
SET  @KeyJoinColumns=replace(replace('"'''+@KeyJoinColumns+'''"','[',''),']','')

exec ('targetdb.dbo.[sp_generate_merge] @schema='''+@srcMergeSchemaName+''',@table_name='''+@srcMergeTableName+''',@target_table='''+@TargetTable+'''
	,@cols_to_join_on='+@KeyJoinColumns+'')
end

set @ID=(SELECT MIN(ID) FROM ETLFramework.ETL.SourceTablesDataLoadDetails WHERE ID > @ID)

END



END]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="CreateOffset" Value="43" />
				<Property Name="Length" Value="2953" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="/*&#xD;&#xA;[2_spr_GenerateDataLoadQueries]&#xD;&#xA;*/&#xD;&#xA;&#xD;&#xA;CREATE proc [dbo].[2_spr_GenerateDataLoadQueries]&#xD;&#xA;as" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[dbo].[sp_generate_merge]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN

SET NOCOUNT ON


--Making sure user only uses either @cols_to_include or @cols_to_exclude
IF ((@cols_to_include IS NOT NULL) AND (@cols_to_exclude IS NOT NULL))
 BEGIN
 RAISERROR('Use either @cols_to_include or @cols_to_exclude. Do not use both the parameters at once',16,1)
 RETURN -1 --Failure. Reason: Both @cols_to_include and @cols_to_exclude parameters are specified
 END


--Making sure the @cols_to_include, @cols_to_exclude and @cols_to_join_on parameters are receiving values in proper format
IF ((@cols_to_include IS NOT NULL) AND (PATINDEX('''%''',@cols_to_include) = 0))
 BEGIN
 RAISERROR('Invalid use of @cols_to_include property',16,1)
 PRINT 'Specify column names surrounded by single quotes and separated by commas'
 PRINT 'Eg: EXEC sp_generate_merge "titles", @cols_to_include = "''title_id'',''title''"'
 RETURN -1 --Failure. Reason: Invalid use of @cols_to_include property
 END

IF ((@cols_to_exclude IS NOT NULL) AND (PATINDEX('''%''',@cols_to_exclude) = 0))
 BEGIN
 RAISERROR('Invalid use of @cols_to_exclude property',16,1)
 PRINT 'Specify column names surrounded by single quotes and separated by commas'
 PRINT 'Eg: EXEC sp_generate_merge "titles", @cols_to_exclude = "''title_id'',''title''"'
 RETURN -1 --Failure. Reason: Invalid use of @cols_to_exclude property
 END

IF ((@cols_to_join_on IS NOT NULL) AND (PATINDEX('''%''',@cols_to_join_on) = 0))
 BEGIN
 RAISERROR('Invalid use of @cols_to_join_on property',16,1)
 PRINT 'Specify column names surrounded by single quotes and separated by commas'
 PRINT 'Eg: EXEC sp_generate_merge "StateProvince", @schema = "Person", @cols_to_join_on = "''StateProvinceCode''"'
 RETURN -1 --Failure. Reason: Invalid use of @cols_to_join_on property
 END

 IF @hash_compare_column IS NOT NULL AND @update_only_if_changed = 0
 BEGIN
	RAISERROR('Invalid use of @update_only_if_changed property',16,1)
	PRINT 'The @hash_compare_column param is set, however @update_only_if_changed is set to 0. To utilize hash-based change detection, please ensure @update_only_if_changed is set to 1.'
	RETURN -1 --Failure. Reason: Invalid use of @update_only_if_changed property
 END	

 IF @hash_compare_column IS NOT NULL AND @include_values = 1
 BEGIN
	RAISERROR('Invalid use of @include_values',16,1)
	PRINT 'Using @hash_compare_column together with @include_values is currenty unsupported. Our intention is to support this in the future, however for now @hash_compare_column can only be specified when @include_values=0'
	RETURN -1 --Failure. Reason: Invalid use of @include_values property
 END

--Checking to see if the database name is specified along wih the table name
--Your database context should be local to the table for which you want to generate a MERGE statement
--specifying the database name is not allowed
IF (PARSENAME(@table_name,3)) IS NOT NULL
 BEGIN
 RAISERROR('Do not specify the database name. Be in the required database and just specify the table name.',16,1)
 RETURN -1 --Failure. Reason: Database name is specified along with the table name, which is not allowed
 END


DECLARE @Internal_Table_Name NVARCHAR(128)
IF PARSENAME(@table_name,1) LIKE '#%'
BEGIN
	IF DB_NAME() <> 'tempdb'
	BEGIN
		RAISERROR('Incorrect database context. The proc must be executed against [tempdb] when a temporary table is specified.',16,1)
		PRINT 'To resolve, execute the proc in the context of [tempdb], e.g. EXEC tempdb.dbo.sp_generate_merge @table_name=''' + @table_name + ''''
		RETURN -1 --Failure. Reason: Temporary tables cannot be referenced in a user db
	END
	SET @Internal_Table_Name = (SELECT [name] FROM sys.objects WHERE [object_id] = OBJECT_ID(@table_name))
END
ELSE
BEGIN
	SET @Internal_Table_Name = @table_name
END

--Checking for the existence of 'user table' or 'view'
--This procedure is not written to work on system tables
--To script the data in system tables, just create a view on the system tables and script the view instead
IF @schema IS NULL
 BEGIN
 IF NOT EXISTS (SELECT 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = @Internal_Table_Name AND (TABLE_TYPE = 'BASE TABLE' OR TABLE_TYPE = 'VIEW') AND TABLE_SCHEMA = SCHEMA_NAME())
 BEGIN
 RAISERROR('User table or view not found.',16,1)
 PRINT 'You may see this error if the specified table is not in your default schema (' + SCHEMA_NAME() + '). In that case use @schema parameter to specify the schema name.'
 PRINT 'Make sure you have SELECT permission on that table or view.'
 RETURN -1 --Failure. Reason: There is no user table or view with this name
 END
 END
ELSE
 BEGIN
 IF NOT EXISTS (SELECT 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = @Internal_Table_Name AND (TABLE_TYPE = 'BASE TABLE' OR TABLE_TYPE = 'VIEW') AND TABLE_SCHEMA = @schema)
 BEGIN
 RAISERROR('User table or view not found.',16,1)
 PRINT 'Make sure you have SELECT permission on that table or view.'
 RETURN -1 --Failure. Reason: There is no user table or view with this name 
 END
 END


--Variable declarations
DECLARE @Column_ID int, 
 @Column_List nvarchar(max), 
 @Column_List_For_Update nvarchar(max), 
 @Column_List_For_Check nvarchar(max), 
 @Column_Name nvarchar(128), 
 @Column_Name_Unquoted nvarchar(128), 
 @Data_Type nvarchar(128), 
 @Actual_Values nvarchar(max), --This is the string that will be finally executed to generate a MERGE statement
 @IDN nvarchar(128), --Will contain the IDENTITY column's name in the table
 @Target_Table_For_Output nvarchar(776),
 @Source_Table_Qualified nvarchar(776),
 @Source_Table_For_Output nvarchar(776),
 @sql nvarchar(max),  --SQL statement that will be executed to check existence of [Hashvalue] column in case @hash_compare_column is used
 @checkhashcolumn nvarchar(128),
 @SourceHashColumn bit = 0,
 @b char(1) = char(13)

 IF @hash_compare_column IS NOT NULL  --Check existence of column [Hashvalue] in target table and raise error in case of missing
 BEGIN
 IF @target_table IS NULL
 BEGIN
	SET @target_table = @table_name
 END		
 SET @SQL =
	'SELECT @columnname = column_name
	FROM ' + COALESCE(PARSENAME(@target_table,3),DB_NAME()) + '.INFORMATION_SCHEMA.COLUMNS (NOLOCK)
	WHERE TABLE_NAME = ''' + PARSENAME(@target_table,1) + '''' +
	' AND TABLE_SCHEMA = ' + '''' + COALESCE(@schema, SCHEMA_NAME()) + '''' + ' AND [COLUMN_NAME] = ''' + @hash_compare_column + ''''

	EXECUTE sp_executesql @sql, N'@columnname nvarchar(128) OUTPUT', @columnname = @checkhashcolumn OUTPUT
	IF @checkhashcolumn IS NULL
	BEGIN
	  RAISERROR('Column %s not found ',16,1, @hash_compare_column)
	  PRINT 'The specified @hash_compare_column [' + @hash_compare_column +  '] does not exist in ' + QUOTENAME(@target_table) + '. Please make sure that [' + @hash_compare_column + '] VARBINARY (8000) exits in the target table'
	  RETURN -1 --Failure. Reason: There is no column that can be used as the basis of Hashcompare
	END	

 END
 

--Variable Initialization
SET @IDN = ''
SET @Column_ID = 0
SET @Column_Name = ''
SET @Column_Name_Unquoted = ''
SET @Column_List = ''
SET @Column_List_For_Update = ''
SET @Column_List_For_Check = ''
SET @Actual_Values = ''

--Variable Defaults
IF @target_table IS NOT NULL AND (@target_table LIKE '%.%' OR @target_table LIKE '\[%\]' ESCAPE '\')
BEGIN
 IF NOT @target_table LIKE '\[%\]' ESCAPE '\'
 BEGIN
  RAISERROR('Ambiguous value for @target_table specified. Use QUOTENAME() to ensure the identifer is fully qualified (e.g. [dbo].[Titles] or [OtherDb].[dbo].[Titles]).',16,1)
  RETURN -1 --Failure. Reason: The value could be a multi-part object identifier or it could be a single-part object identifier that just happens to include a period character
 END

 -- If the user has specified the @schema param, but the qualified @target_table they've specified does not include the target schema, then fail validation to avoid any ambiguity
 IF @schema IS NOT NULL AND @target_table NOT LIKE '%.%'
 BEGIN
  RAISERROR('The specified @target_table is missing a schema name (e.g. [dbo].[Titles]).',16,1)
  RETURN -1 --Failure. Reason: Omitting the schema in this scenario is likely a mistake
 END

  SET @Target_Table_For_Output = @target_table 
 END
 ELSE
 BEGIN
 IF @schema IS NULL
 BEGIN
  SET @Target_Table_For_Output = QUOTENAME(COALESCE(@target_table, @table_name))
 END
 ELSE
 BEGIN
  SET @Target_Table_For_Output = QUOTENAME(@schema) + '.' + QUOTENAME(COALESCE(@target_table, @table_name))
 END
END

SET @Source_Table_Qualified = QUOTENAME(COALESCE(@schema,SCHEMA_NAME())) + '.' + QUOTENAME(@Internal_Table_Name)
SET @Source_Table_For_Output = QUOTENAME(COALESCE(@schema,SCHEMA_NAME())) + '.' + QUOTENAME(@table_name)

--To get the first column's ID
SELECT @Column_ID = MIN(ORDINAL_POSITION) 
FROM INFORMATION_SCHEMA.COLUMNS (NOLOCK) 
WHERE TABLE_NAME = @Internal_Table_Name
AND TABLE_SCHEMA = COALESCE(@schema, SCHEMA_NAME())


--Loop through all the columns of the table, to get the column names and their data types
WHILE @Column_ID IS NOT NULL
 BEGIN
 SELECT @Column_Name = QUOTENAME(COLUMN_NAME), 
 @Column_Name_Unquoted = COLUMN_NAME,
 @Data_Type = DATA_TYPE 
 FROM INFORMATION_SCHEMA.COLUMNS (NOLOCK) 
 WHERE ORDINAL_POSITION = @Column_ID
 AND TABLE_NAME = @Internal_Table_Name
 AND TABLE_SCHEMA = COALESCE(@schema, SCHEMA_NAME())


IF @Data_Type IN ('timestamp','rowversion') --SQL Server doesn't allow Timestamp/Rowversion column updates
BEGIN
	GOTO SKIP_LOOP
END

 IF @cols_to_include IS NOT NULL --Selecting only user specified columns
 BEGIN
 IF CHARINDEX( '''' + SUBSTRING(@Column_Name,2,LEN(@Column_Name)-2) + '''',@cols_to_include) = 0 
 BEGIN
 GOTO SKIP_LOOP
 END
 END

 IF @cols_to_exclude IS NOT NULL --Selecting only user specified columns
 BEGIN
 IF CHARINDEX( '''' + SUBSTRING(@Column_Name,2,LEN(@Column_Name)-2) + '''',@cols_to_exclude) <> 0 
 BEGIN
 GOTO SKIP_LOOP
 END
 END

 --Making sure to output SET IDENTITY_INSERT ON/OFF in case the table has an IDENTITY column
 IF (SELECT COLUMNPROPERTY( OBJECT_ID(@Source_Table_Qualified),SUBSTRING(@Column_Name,2,LEN(@Column_Name) - 2),'IsIdentity')) = 1 
 BEGIN
 IF @ommit_identity = 0 --Determing whether to include or exclude the IDENTITY column
 SET @IDN = @Column_Name
 ELSE
 GOTO SKIP_LOOP 
 END
 
 --Making sure whether to output computed columns or not
 IF @ommit_computed_cols = 1
 BEGIN
 IF (SELECT COLUMNPROPERTY( OBJECT_ID(@Source_Table_Qualified),SUBSTRING(@Column_Name,2,LEN(@Column_Name) - 2),'IsComputed')) = 1 
 BEGIN
 PRINT 'Warning: The ' + @Column_Name + ' computed column will be excluded from the MERGE statement. Specify @ommit_computed_cols = 0 to include computed columns.'
 GOTO SKIP_LOOP 
 END
 END

 --Skip this column if it is the GENERATED ALWAYS type, unless the user specifically wants those types of columns included
 IF @ommit_generated_always_cols = 1
 IF ISNULL((SELECT COLUMNPROPERTY( OBJECT_ID(@Source_Table_Qualified),SUBSTRING(@Column_Name,2,LEN(@Column_Name) - 2),'GeneratedAlwaysType')), 0) <> 0
 BEGIN
 PRINT 'Warning: The ' + @Column_Name + ' GENERATED ALWAYS column will be excluded from the MERGE statement. Specify @ommit_generated_always_cols = 0 to include GENERATED ALWAYS columns.'
 GOTO SKIP_LOOP 
 END

 --make sure if source table already contains @hash_compare_column to avoid being doubled in UPDATE clause
 IF  @hash_compare_column IS NOT NULL AND @Column_Name = QUOTENAME(@hash_compare_column)
 BEGIN
	SET @SourceHashColumn = 1
 END
 
 --Tables with columns of IMAGE data type are not supported for obvious reasons
 IF(@Data_Type in ('image'))
 BEGIN
 IF (@ommit_images = 0)
 BEGIN
 RAISERROR('Tables with image columns are not supported.',16,1)
 PRINT 'Use @ommit_images = 1 parameter to generate a MERGE for the rest of the columns.'
 RETURN -1 --Failure. Reason: There is a column with image data type
 END
 ELSE
 BEGIN
 GOTO SKIP_LOOP
 END
 END

 --Determining the data type of the column and depending on the data type, the VALUES part of
 --the MERGE statement is generated. Care is taken to handle columns with NULL values. Also
 --making sure, not to lose any data from flot, real, money, smallmomey, datetime columns
 SET @Actual_Values = @Actual_Values +
 CASE 
 WHEN @Data_Type IN ('char','nchar') 
 THEN 
 'COALESCE(''N'''''' + REPLACE(RTRIM(' + @Column_Name + '),'''''''','''''''''''')+'''''''',''NULL'')'
 WHEN @Data_Type IN ('varchar','nvarchar') 
 THEN 
 'COALESCE(''N'''''' + REPLACE(' + @Column_Name + ','''''''','''''''''''')+'''''''',''NULL'')'
 WHEN @Data_Type IN ('datetime','smalldatetime','datetime2','date', 'datetimeoffset', 'time') 
 THEN 
 'COALESCE('''''''' + RTRIM(CONVERT(char,' + @Column_Name + ',127))+'''''''',''NULL'')'
 WHEN @Data_Type IN ('uniqueidentifier') 
 THEN 
 'COALESCE(''N'''''' + REPLACE(CONVERT(char(36),RTRIM(' + @Column_Name + ')),'''''''','''''''''''')+'''''''',''NULL'')'
 WHEN @Data_Type IN ('text') 
 THEN 
 'COALESCE(''N'''''' + REPLACE(CONVERT(varchar(max),' + @Column_Name + '),'''''''','''''''''''')+'''''''',''NULL'')' 
 WHEN @Data_Type IN ('ntext') 
 THEN 
 'COALESCE('''''''' + REPLACE(CONVERT(nvarchar(max),' + @Column_Name + '),'''''''','''''''''''')+'''''''',''NULL'')' 
 WHEN @Data_Type IN ('xml') 
 THEN 
 'COALESCE('''''''' + REPLACE(CONVERT(nvarchar(max),' + @Column_Name + '),'''''''','''''''''''')+'''''''',''NULL'')' 
 WHEN @Data_Type IN ('binary','varbinary') 
 THEN 
 'COALESCE(RTRIM(CONVERT(varchar(max),' + @Column_Name + ', 1)),''NULL'')' 
 WHEN @Data_Type IN ('float','real','money','smallmoney')
 THEN
 'COALESCE(LTRIM(RTRIM(' + 'CONVERT(char, ' + @Column_Name + ',2)' + ')),''NULL'')' 
 WHEN @Data_Type IN ('hierarchyid')
 THEN 
  'COALESCE(''hierarchyid::Parse(''+'''''''' + LTRIM(RTRIM(' + 'CONVERT(char, ' + @Column_Name + ')' + '))+''''''''+'')'',''NULL'')' 
 WHEN @Data_Type IN ('geography')
 THEN
  'COALESCE(''geography::STGeomFromText(''+'''''''' + LTRIM(RTRIM(' + 'CONVERT(nvarchar(max),' + @Column_Name + ')' + '))+''''''''+'', 4326)'',''NULL'')' 
 WHEN @Data_Type IN ('geometry')
 THEN
  'COALESCE(''geometry::Parse(''+'''''''' + LTRIM(RTRIM(' + 'CONVERT(nvarchar(max),' + @Column_Name + ')' + '))+''''''''+'')'',''NULL'')' 
 ELSE 
 'COALESCE(LTRIM(RTRIM(' + 'CONVERT(char, ' + @Column_Name + ')' + ')),''NULL'')' 
 END + '+' + ''',''' + ' + '
 
 --Generating the column list for the MERGE statement
 SET @Column_List = @Column_List +  
 CASE WHEN @hash_compare_column IS NOT NULL AND @Column_Name = QUOTENAME(@hash_compare_column)
 THEN ''
 ELSE @Column_Name + ',' END
 
 --Don't update Primary Key or Identity columns
 IF NOT EXISTS(
 SELECT 1
 FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS pk ,
 INFORMATION_SCHEMA.KEY_COLUMN_USAGE c
 WHERE pk.TABLE_NAME = @Internal_Table_Name
 AND pk.TABLE_SCHEMA = COALESCE(@schema, SCHEMA_NAME())
 AND CONSTRAINT_TYPE = 'PRIMARY KEY'
 AND c.TABLE_NAME = pk.TABLE_NAME
 AND c.TABLE_SCHEMA = pk.TABLE_SCHEMA
 AND c.CONSTRAINT_NAME = pk.CONSTRAINT_NAME
 AND c.COLUMN_NAME = @Column_Name_Unquoted
 UNION
 SELECT 1
 FROM sys.identity_columns
 WHERE OBJECT_SCHEMA_NAME(OBJECT_ID) = COALESCE(@schema, SCHEMA_NAME())
 AND OBJECT_NAME(object_id) = @Internal_Table_Name
 AND name = @Column_Name_Unquoted
 )
 BEGIN
  SET @Column_List_For_Update = @Column_List_For_Update + '[Target].' + @Column_Name + ' = [Source].' + @Column_Name + ', ' + @b + '  '
 SET @Column_List_For_Check = @Column_List_For_Check +
 CASE @Data_Type 
 WHEN 'text' THEN CHAR(10) + CHAR(9) + 'NULLIF(CAST([Source].' + @Column_Name + ' AS VARCHAR(MAX)), CAST([Target].' + @Column_Name + ' AS VARCHAR(MAX))) IS NOT NULL OR NULLIF(CAST([Target].' + @Column_Name + ' AS VARCHAR(MAX)), CAST([Source].' + @Column_Name + ' AS VARCHAR(MAX))) IS NOT NULL OR '
 WHEN 'ntext' THEN CHAR(10) + CHAR(9) + 'NULLIF(CAST([Source].' + @Column_Name + ' AS NVARCHAR(MAX)), CAST([Target].' + @Column_Name + ' AS NVARCHAR(MAX))) IS NOT NULL OR NULLIF(CAST([Target].' + @Column_Name + ' AS NVARCHAR(MAX)), CAST([Source].' + @Column_Name + ' AS NVARCHAR(MAX))) IS NOT NULL OR ' 
 WHEN 'xml' THEN CHAR(10) + CHAR(9) + 'NULLIF(CAST([Source].' + @Column_Name + ' AS NVARCHAR(MAX)), CAST([Target].' + @Column_Name + ' AS NVARCHAR(MAX))) IS NOT NULL OR NULLIF(CAST([Target].' + @Column_Name + ' AS NVARCHAR(MAX)), CAST([Source].' + @Column_Name + ' AS NVARCHAR(MAX))) IS NOT NULL OR ' 
 WHEN 'geography' THEN CHAR(10) + CHAR(9) + '((NOT ([Source].' + @Column_Name + ' IS NULL AND [Target].' + @Column_Name + ' IS NULL)) AND ISNULL(ISNULL([Source].' + @Column_Name + ', geography::[Null]).STEquals([Target].' + @Column_Name + '), 0) = 0) OR '
 WHEN 'geometry' THEN CHAR(10) + CHAR(9) + '((NOT ([Source].' + @Column_Name + ' IS NULL AND [Target].' + @Column_Name + ' IS NULL)) AND ISNULL(ISNULL([Source].' + @Column_Name + ', geometry::[Null]).STEquals([Target].' + @Column_Name + '), 0) = 0) OR '
 ELSE CHAR(10) + CHAR(9) + 'NULLIF([Source].' + @Column_Name + ', [Target].' + @Column_Name + ') IS NOT NULL OR NULLIF([Target].' + @Column_Name + ', [Source].' + @Column_Name + ') IS NOT NULL OR '
 END 
 END

 SKIP_LOOP: --The label used in GOTO

 SELECT @Column_ID = MIN(ORDINAL_POSITION) 
 FROM INFORMATION_SCHEMA.COLUMNS (NOLOCK) 
 WHERE TABLE_NAME = @Internal_Table_Name
 AND TABLE_SCHEMA = COALESCE(@schema, SCHEMA_NAME())
 AND ORDINAL_POSITION > @Column_ID

 END --Loop ends here!


--To get rid of the extra characters that got concatenated during the last run through the loop
IF LEN(@Column_List_For_Update) <> 0
 BEGIN
 SET @Column_List_For_Update = ' ' + LEFT(@Column_List_For_Update,len(@Column_List_For_Update) - 3)
 END

IF LEN(@Column_List_For_Check) <> 0
 BEGIN
 SET @Column_List_For_Check = LEFT(@Column_List_For_Check,len(@Column_List_For_Check) - 3)
 END

SET @Actual_Values = LEFT(@Actual_Values,len(@Actual_Values) - 6)

SET @Column_List = LEFT(@Column_List,len(@Column_List) - 1)
IF LEN(LTRIM(@Column_List)) = 0
 BEGIN
 RAISERROR('No columns to select. There should at least be one column to generate the output',16,1)
 RETURN -1 --Failure. Reason: Looks like all the columns are ommitted using the @cols_to_exclude parameter
 END


--Get the join columns ----------------------------------------------------------
DECLARE @PK_column_list NVARCHAR(max)
DECLARE @PK_column_joins NVARCHAR(max)
SET @PK_column_list = ''
SET @PK_column_joins = ''

IF ISNULL(@cols_to_join_on, '') = '' -- Use primary key of the source table as the basis of MERGE joins, if no join list is specified
BEGIN
	SELECT @PK_column_list = @PK_column_list + '[' + c.COLUMN_NAME + '], '
	, @PK_column_joins = @PK_column_joins + '[Target].[' + c.COLUMN_NAME + '] = [Source].[' + c.COLUMN_NAME + '] AND '
	FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS pk ,
	INFORMATION_SCHEMA.KEY_COLUMN_USAGE c
	WHERE pk.TABLE_NAME = @Internal_Table_Name
	AND pk.TABLE_SCHEMA = COALESCE(@schema, SCHEMA_NAME())
	AND CONSTRAINT_TYPE = 'PRIMARY KEY'
	AND c.TABLE_NAME = pk.TABLE_NAME
	AND c.TABLE_SCHEMA = pk.TABLE_SCHEMA
	AND c.CONSTRAINT_NAME = pk.CONSTRAINT_NAME
	ORDER BY c.ORDINAL_POSITION
END
ELSE
BEGIN
	SELECT @PK_column_list = @PK_column_list + '[' + c.COLUMN_NAME + '], '
	, @PK_column_joins = @PK_column_joins + '([Target].[' + c.COLUMN_NAME + '] = [Source].[' + c.COLUMN_NAME + ']' + CASE WHEN c.IS_NULLABLE='YES' THEN ' OR ([Target].[' + c.COLUMN_NAME + '] IS NULL AND [Source].[' + c.COLUMN_NAME + '] IS NULL)' ELSE '' END + ') AND '
	FROM INFORMATION_SCHEMA.COLUMNS AS c
	WHERE @cols_to_join_on LIKE '%''' + c.COLUMN_NAME + '''%'
	AND c.TABLE_NAME = @Internal_Table_Name
	AND c.TABLE_SCHEMA = COALESCE(@schema, SCHEMA_NAME())
END

IF ISNULL(@PK_column_list, '') = '' 
BEGIN
	RAISERROR('Table does not have a primary key from which to generate the join clause(s) and/or a valid @cols_to_join_on has not been specified. Either add a primary key/composite key to the table or specify the @cols_to_join_on parameter.',16,1)
	RETURN -1 --Failure. Reason: looks like table doesn't have any primary keys
END

SET @PK_column_list = LEFT(@PK_column_list, LEN(@PK_column_list) -1)
SET @PK_column_joins = LEFT(@PK_column_joins, LEN(@PK_column_joins) -4)


--Forming the final string that will be executed, to output the a MERGE statement
SET @Actual_Values = 
 'SELECT ' + 
 CASE WHEN @top IS NULL OR @top < 0 THEN '' ELSE ' TOP ' + LTRIM(STR(@top)) + ' ' END + 
 '''' + 
 ' '' + CASE WHEN ROW_NUMBER() OVER (ORDER BY (SELECT NULL)) = 1 THEN '' '' ELSE '','' END + ''(''+ ' + @Actual_Values + '+'')''' + ' ' + 
 COALESCE(@from,' FROM ' + @Source_Table_Qualified + ' (NOLOCK) ORDER BY ' + @PK_column_list)

 SET @output = CASE WHEN ISNULL(@results_to_text, 1) = 1 THEN '' ELSE '---' END


--Determining whether to ouput any debug information
IF @debug_mode =1
 BEGIN
 SET @output += @b + '/*****START OF DEBUG INFORMATION*****'
 SET @output += @b + ''
 SET @output += @b + 'The primary key column list:'
 SET @output += @b + @PK_column_list
 SET @output += @b + ''
 SET @output += @b + 'The INSERT column list:'
 SET @output += @b + @Column_List
 SET @output += @b + ''
 SET @output += @b + 'The UPDATE column list:'
 SET @output += @b + @Column_List_For_Update
 SET @output += @b + ''
 SET @output += @b + 'The SELECT statement executed to generate the MERGE:'
 SET @output += @b + @Actual_Values
 SET @output += @b + ''
 SET @output += @b + '*****END OF DEBUG INFORMATION*****/'
 SET @output += @b + ''
 END
 
IF (@include_use_db = 1)
 BEGIN
	SET @output += @b 
	SET @output += @b + 'USE [' + DB_NAME() + ']'
	SET @output += @b + ISNULL(@batch_separator, '')
	SET @output += @b 
 END


IF (@include_rowsaffected = 1) -- If the caller has elected not to include the "rows affected" section, let MERGE output the row count as it is executed.
 SET @output += @b + 'SET NOCOUNT ON'
 SET @output += @b + ''


--Determining whether to print IDENTITY_INSERT or not
IF (LEN(@IDN) <> 0)
 BEGIN
 SET @output += @b + 'SET IDENTITY_INSERT ' + @Target_Table_For_Output + ' ON'
 SET @output += @b + ''
 END


--Temporarily disable constraints on the target table
DECLARE @output_enable_constraints NVARCHAR(MAX) = ''
DECLARE @ignore_disable_constraints BIT = IIF((OBJECT_ID(@Source_Table_Qualified, 'U') IS NULL), 1, 0)
IF @disable_constraints = 1 AND @ignore_disable_constraints = 1
BEGIN
	PRINT 'Warning: @disable_constraints=1 will be ignored as the source table does not exist'
END
ELSE IF @disable_constraints = 1
BEGIN
	DECLARE @Source_Table_Constraints TABLE ([name] SYSNAME PRIMARY KEY, [is_not_trusted] bit, [is_disabled] bit)
	INSERT INTO @Source_Table_Constraints ([name], [is_not_trusted], [is_disabled])
	SELECT [name], [is_not_trusted], [is_disabled] FROM sys.check_constraints WHERE parent_object_id = OBJECT_ID(@Source_Table_Qualified, 'U')
	UNION
	SELECT [name], [is_not_trusted], [is_disabled] FROM sys.foreign_keys WHERE parent_object_id = OBJECT_ID(@Source_Table_Qualified, 'U')

	DECLARE @Constraint_Ct INT = (SELECT COUNT(1) FROM @Source_Table_Constraints)
	IF @Constraint_Ct = 0
	BEGIN
		PRINT 'Warning: @disable_constraints=1 will be ignored as there are no foreign key or check constraints on the source table'
		SET @ignore_disable_constraints = 1
	END
	ELSE IF ((SELECT COUNT(1) FROM @Source_Table_Constraints WHERE [is_disabled] = 1) = (SELECT COUNT(1) FROM @Source_Table_Constraints))
	BEGIN
		PRINT 'Warning: @disable_constraints=1 will be ignored as all foreign key and/or check constraints on the source table are currently disabled'
		SET @ignore_disable_constraints = 1
	END
	ELSE
	BEGIN
		DECLARE @All_Constraints_Enabled BIT = IIF((SELECT COUNT(1) FROM @Source_Table_Constraints WHERE [is_disabled] = 0) = @Constraint_Ct, 1, 0)
		DECLARE @All_Constraints_Trusted BIT = IIF((SELECT COUNT(1) FROM @Source_Table_Constraints WHERE [is_not_trusted] = 0) = @Constraint_Ct, 1, 0)
		DECLARE @All_Constraints_NotTrusted BIT = IIF((SELECT COUNT(1) FROM @Source_Table_Constraints WHERE [is_not_trusted] = 1) = @Constraint_Ct, 1, 0)

		IF @All_Constraints_Enabled = 1 AND @All_Constraints_Trusted = 1
		BEGIN
			SET @output += @b + 'ALTER TABLE ' + @Target_Table_For_Output + ' NOCHECK CONSTRAINT ALL' -- Disable constraints temporarily
			SET @output_enable_constraints += @b + 'ALTER TABLE ' + @Target_Table_For_Output + ' WITH CHECK CHECK CONSTRAINT ALL' -- Enable the previously disabled constraints and re-check all data
		END
		ELSE IF @All_Constraints_Enabled = 1 AND @All_Constraints_NotTrusted = 1
		BEGIN
			SET @output += @b + 'ALTER TABLE ' + @Target_Table_For_Output + ' NOCHECK CONSTRAINT ALL' -- Disable constraints temporarily
			SET @output_enable_constraints += @b + 'ALTER TABLE ' + @Target_Table_For_Output + ' CHECK CONSTRAINT ALL' -- Enable the previously disabled constraints, but don't re-check data 
		END
		ELSE
		BEGIN
			-- Selectively enable/disable constraints, with/without WITH CHECK, on a case-by-case basis
			WHILE ((SELECT COUNT(1) FROM @Source_Table_Constraints) != 0)
			BEGIN
				DECLARE @Constraint_Item_Name SYSNAME = (SELECT TOP 1 [name] FROM @Source_Table_Constraints)
				DECLARE @Constraint_Item_IsDisabled BIT = (SELECT TOP 1 [is_disabled] FROM @Source_Table_Constraints)
				DECLARE @Constraint_Item_IsNotTrusted BIT = (SELECT TOP 1 [is_not_trusted] FROM @Source_Table_Constraints)

				IF (@Constraint_Item_IsDisabled = 1)
				BEGIN
					DELETE FROM @Source_Table_Constraints WHERE [name] = @Constraint_Item_Name -- Don't enable this previously-disabled constraint
					CONTINUE;
				END

				SET @output += @b + 'ALTER TABLE ' + @Target_Table_For_Output + ' NOCHECK CONSTRAINT ' + QUOTENAME(@Constraint_Item_Name)
				IF (@Constraint_Item_IsNotTrusted = 1)
				BEGIN
					SET @output_enable_constraints += @b + 'ALTER TABLE ' + @Target_Table_For_Output + ' CHECK CONSTRAINT ' + QUOTENAME(@Constraint_Item_Name) -- Enable the previously disabled constraint, but don't re-check data 
				END
				ELSE
				BEGIN
					SET @output_enable_constraints += @b + 'ALTER TABLE ' + @Target_Table_For_Output + ' WITH CHECK CHECK CONSTRAINT ' + QUOTENAME(@Constraint_Item_Name) -- Enable the previously disabled constraint and re-check all data
				END

				DELETE FROM @Source_Table_Constraints WHERE [name] = @Constraint_Item_Name
			END
		END
	END
END

IF @include_rowsaffected = 1
BEGIN
 SET @output += @b + 'DECLARE @mergeOutput TABLE ( [DMLAction] VARCHAR(6) );'
END
--Output the start of the MERGE statement, qualifying with the schema name only if the caller explicitly specified it
SET @output += @b + 'MERGE INTO ' + @Target_Table_For_Output + ' AS [Target]'

IF @include_values = 1
BEGIN
 SET @output += @b + 'USING ('
 --All the hard work pays off here!!! You'll get your MERGE statement, when the next line executes!
 DECLARE @tab TABLE (ID INT NOT NULL PRIMARY KEY IDENTITY(1,1), val NVARCHAR(max));
 INSERT INTO @tab (val)
 EXEC (@Actual_Values)

 IF (SELECT COUNT(*) FROM @tab) <> 0 -- Ensure that rows were returned, otherwise the MERGE statement will get nullified.
 BEGIN
  SET @output += 'VALUES' + CAST((SELECT @b + val FROM @tab ORDER BY ID FOR XML PATH('')) AS XML).value('.', 'NVARCHAR(MAX)');
 END
 ELSE
 BEGIN
  -- Mimic an empty result set by returning zero rows from the target table
  SET @output += 'SELECT ' + @Column_List + ' FROM ' + @Target_Table_For_Output + ' WHERE 1 = 0 -- Empty dataset (source table contained no rows at time of MERGE generation) '
 END

 --Output the columns to correspond with each of the values above--------------------
 SET @output += @b + ') AS [Source] (' + @Column_List + ')'
END
ELSE
 IF @hash_compare_column IS NULL
 BEGIN
  SET @output += @b + 'USING ' + @Source_Table_For_Output + ' AS [Source]';
 END
 ELSE
 BEGIN
  SET @output += @b + 'USING (SELECT ' + @Column_List + ', HASHBYTES(''SHA2_256'', CONCAT(' + REPLACE(@Column_List,'],[','],''|'',[') +')) AS [' + @hash_compare_column  + '] FROM ' + @Source_Table_For_Output + ') AS [Source]'
 END

--Output the join columns ----------------------------------------------------------
SET @output += @b + 'ON (' + @PK_column_joins + ')'


--When matched, perform an UPDATE on any metadata columns only (ie. not on PK)------
IF LEN(@Column_List_For_Update) <> 0
BEGIN
 --Adding column @hash_compare_column to @ColumnList and @Column_List_For_Update if @hash_compare_column is not null
 IF @update_only_if_changed = 1 AND @hash_compare_column IS NOT NULL AND @SourceHashColumn = 0
 BEGIN
	SET @Column_List_For_Update = @Column_List_For_Update + ',' + @b + '  [Target].[' + @hash_compare_column +'] = [Source].[' + @hash_compare_column +']'
	SET @Column_List = @Column_List + ',[' + @hash_compare_column + ']'
 END
 SET @output += @b + 'WHEN MATCHED ' + 
	 CASE WHEN @update_only_if_changed = 1 AND @hash_compare_column IS NOT NULL
	 THEN 'AND ([Target].[' + @hash_compare_column +'] <> [Source].[' + @hash_compare_column +'] OR [Target].[' + @hash_compare_column + '] IS NULL) ' 
	 ELSE CASE WHEN @update_only_if_changed = 1 AND @hash_compare_column IS NULL THEN
	 'AND (' + @Column_List_For_Check + ') ' ELSE '' END END + 'THEN'
 SET @output += @b + ' UPDATE SET'
 SET @output += @b + '  ' + LTRIM(@Column_List_For_Update)
END


--When NOT matched by target, perform an INSERT------------------------------------
SET @output += @b + 'WHEN NOT MATCHED BY TARGET THEN';
SET @output += @b + ' INSERT(' + @Column_List + ')'
SET @output += @b + ' VALUES(' + REPLACE(@Column_List, '[', '[Source].[') + ')'


--When NOT matched by source, DELETE the row as required
IF @delete_if_not_matched=1 
BEGIN
 SET @output += @b + 'WHEN NOT MATCHED BY SOURCE THEN '
 SET @output += @b + ' DELETE'
END
IF @include_rowsaffected = 1
BEGIN
 SET @output += @b + 'OUTPUT $action INTO @mergeOutput'
END
SET @output += ';' + @b


--Display the number of affected rows to the user, or report if an error occurred---
IF @include_rowsaffected = 1
BEGIN
 SET @output += @b + 'DECLARE @mergeError int'
 SET @output += @b + ' , @mergeCount int, @mergeCountIns int, @mergeCountUpd int, @mergeCountDel int'
 SET @output += @b + 'SELECT @mergeError = @@ERROR'
 SET @output += @b + 'SELECT @mergeCount = COUNT(1), @mergeCountIns = SUM(IIF([DMLAction] = ''INSERT'', 1, 0)), @mergeCountUpd = SUM(IIF([DMLAction] = ''UPDATE'', 1, 0)), @mergeCountDel = SUM (IIF([DMLAction] = ''DELETE'', 1, 0)) FROM @mergeOutput'
 SET @output += @b + 'IF @mergeError != 0'
 SET @output += @b + ' BEGIN'
 SET @output += @b + ' PRINT ''ERROR OCCURRED IN MERGE FOR ' + @Target_Table_For_Output + '. Rows affected: '' + CAST(@mergeCount AS VARCHAR(100)); -- SQL should always return zero rows affected';
 SET @output += @b + ' END'
 SET @output += @b + 'ELSE'
 SET @output += @b + ' BEGIN'
 SET @output += @b + ' PRINT ''' + @Target_Table_For_Output + ' rows affected by MERGE: '' + CAST(COALESCE(@mergeCount,0) AS VARCHAR(100)) + '' (Inserted: '' + CAST(COALESCE(@mergeCountIns,0) AS VARCHAR(100)) + ''; Updated: '' + CAST(COALESCE(@mergeCountUpd,0) AS VARCHAR(100)) + ''; Deleted: '' + CAST(COALESCE(@mergeCountDel,0) AS VARCHAR(100)) + '')'' ;'
 SET @output += @b + ' END'
 SET @output += @b + ISNULL(@batch_separator, '')
 SET @output += @b + @b
END

--Re-enable the temporarily disabled constraints-------------------------------------
IF @disable_constraints = 1 AND @ignore_disable_constraints = 0
BEGIN
	SET @output += @output_enable_constraints
	SET @output += @b + ISNULL(@batch_separator, '')
	SET @output += @b
END


--Switch-off identity inserting------------------------------------------------------
IF (LEN(@IDN) <> 0)
 BEGIN
 SET @output += @b
 SET @output += @b +'SET IDENTITY_INSERT ' + @Target_Table_For_Output + ' OFF'
 	
 END

IF (@include_rowsaffected = 1)
BEGIN
 SET @output += @b
 SET @output +=      'SET NOCOUNT OFF'
 SET @output += @b + ISNULL(@batch_separator, '')
 SET @output += @b
END

SET @output += @b + ''
SET @output += @b + ''

IF @results_to_text = 1
BEGIN
	--output the statement to the Grid/Messages tab
	SELECT @output;
END
ELSE IF @results_to_text = 0
BEGIN
	--output the statement as xml (to overcome SSMS 4000/8000 char limitation)
	PRINT @output
	--SELECT [processing-instruction(x)]=@output FOR XML PATH(''),TYPE;
	
END
ELSE
BEGIN
	PRINT 'MERGE statement generated successfully (refer to @output OUTPUT parameter for generated T-SQL).'
END

SET NOCOUNT OFF
RETURN 0 --Success. We are done!

END]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[bit]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[char]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[bit]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[bit]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_generate_merge].[@Source_Table_Constraints].[is_disabled]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[bit]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_generate_merge].[@Source_Table_Constraints].[is_not_trusted]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[bit]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[sys].[sysname]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_generate_merge].[@Source_Table_Constraints].[name]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[bit]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[bit]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_generate_merge].[@cols_to_include]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_generate_merge].[@cols_to_exclude]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_generate_merge].[@cols_to_join_on]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_generate_merge].[@hash_compare_column]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_generate_merge].[@update_only_if_changed]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_generate_merge].[@include_values]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_generate_merge].[@table_name]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References Name="[dbo].[sp_generate_merge].[@schema]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References Name="[dbo].[sp_generate_merge].[@target_table]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References Name="[dbo].[sp_generate_merge].[@ommit_identity]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_generate_merge].[@ommit_computed_cols]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_generate_merge].[@ommit_generated_always_cols]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_generate_merge].[@ommit_images]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References Name="[dbo].[sp_generate_merge].[@top]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_generate_merge].[@from]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_generate_merge].[@output]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_generate_merge].[@results_to_text]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_generate_merge].[@debug_mode]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_generate_merge].[@include_use_db]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_generate_merge].[@batch_separator]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_generate_merge].[@include_rowsaffected]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_generate_merge].[@disable_constraints]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_generate_merge].[@Source_Table_Constraints].[name]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_generate_merge].[@Source_Table_Constraints].[is_not_trusted]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_generate_merge].[@Source_Table_Constraints].[is_disabled]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References Name="[dbo].[sp_generate_merge].[@tab].[val]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[xml]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_generate_merge].[@tab].[val]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_generate_merge].[@tab].[ID]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_generate_merge].[@delete_if_not_matched]" />
				</Entry>
			</Relationship>
			<Relationship Name="DynamicObjects">
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[sp_generate_merge].[@Source_Table_Constraints]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_generate_merge].[@Source_Table_Constraints].[name]">
									<Property Name="IsNullable" Value="False" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[sys].[sysname]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_generate_merge].[@Source_Table_Constraints].[is_not_trusted]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[bit]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_generate_merge].[@Source_Table_Constraints].[is_disabled]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[bit]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[sp_generate_merge].[@tab]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_generate_merge].[@tab].[ID]">
									<Property Name="IsNullable" Value="False" />
									<Property Name="IsIdentity" Value="True" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[int]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_generate_merge].[@tab].[val]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="IsMax" Value="True" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[sp_generate_merge].[@table_name]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="776" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[sp_generate_merge].[@target_table]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[NULL]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="776" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[sp_generate_merge].[@from]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[NULL]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[sp_generate_merge].[@include_values]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[0]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[bit]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[sp_generate_merge].[@include_timestamp]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[0]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[bit]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[sp_generate_merge].[@debug_mode]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[0]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[bit]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[sp_generate_merge].[@schema]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[NULL]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="64" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[sp_generate_merge].[@ommit_images]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[0]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[bit]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[sp_generate_merge].[@ommit_identity]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[0]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[bit]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[sp_generate_merge].[@top]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[NULL]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[sp_generate_merge].[@cols_to_include]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[NULL]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[sp_generate_merge].[@cols_to_exclude]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[NULL]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[sp_generate_merge].[@cols_to_join_on]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[NULL]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[sp_generate_merge].[@update_only_if_changed]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[1]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[bit]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[sp_generate_merge].[@hash_compare_column]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[NULL]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="128" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[sp_generate_merge].[@delete_if_not_matched]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[0]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[bit]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[sp_generate_merge].[@disable_constraints]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[0]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[bit]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[sp_generate_merge].[@ommit_computed_cols]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[1]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[bit]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[sp_generate_merge].[@ommit_generated_always_cols]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[1]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[bit]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[sp_generate_merge].[@include_use_db]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[1]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[bit]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[sp_generate_merge].[@results_to_text]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[0]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[bit]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[sp_generate_merge].[@include_rowsaffected]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[1]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[bit]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[sp_generate_merge].[@nologo]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[0]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[bit]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[sp_generate_merge].[@batch_separator]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA['GO']]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="50" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[sp_generate_merge].[@output]">
						<Property Name="IsOutput" Value="True" />
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[null]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="CreateOffset" Value="198" />
				<Property Name="Length" Value="36441" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="&#xD;&#xA;--Turn system object marking on&#xD;&#xA;/*&#xD;&#xA;exec [sp_generate_merge] @schema='Sales',@table_name='LandingSalesTaxRate',@target_table='[Sales].[SalesTaxRate]'&#xD;&#xA;,@cols_to_join_on=&quot;'SalesTaxRateID'&quot;&#xD;&#xA;*/&#xD;&#xA;&#xD;&#xA;CREATE PROC [dbo].[sp_generate_merge]&#xD;&#xA;(&#xD;&#xA; @table_name nvarchar(776), -- The table/view for which the MERGE statement will be generated using the existing data. This parameter accepts unquoted single-part identifiers only (e.g. MyTable)&#xD;&#xA; @target_table nvarchar(776) = NULL, -- Use this parameter to specify a different table name into which the data will be inserted/updated/deleted. This parameter accepts unquoted single-part identifiers (e.g. MyTable) or quoted multi-part identifiers (e.g. [OtherDb].[dbo].[MyTable])&#xD;&#xA; @from nvarchar(max) = NULL, -- Use this parameter to filter the rows based on a filter condition (using WHERE). Note: To avoid inconsistent ordering of results, including an ORDER BY clause is highly recommended&#xD;&#xA; @include_values bit = 0, -- When 1, a VALUES clause containing data from @table_name is generated. When 0, data will be sourced directly from @table_name when the MERGE is executed (see example 15 for use case)&#xD;&#xA; @include_timestamp bit = 0, -- [DEPRECATED] Sql Server does not allow modification of TIMESTAMP datatype&#xD;&#xA; @debug_mode bit = 0, -- If @debug_mode is set to 1, the SQL statements constructed by this procedure will be printed for later examination&#xD;&#xA; @schema nvarchar(64) = NULL, -- Use this parameter if you are not the owner of the table&#xD;&#xA; @ommit_images bit = 0, -- Use this parameter to generate MERGE statement by omitting the 'image' columns&#xD;&#xA; @ommit_identity bit = 0, -- Use this parameter to omit the identity columns&#xD;&#xA; @top int = NULL, -- Use this parameter to generate a MERGE statement only for the TOP n rows&#xD;&#xA; @cols_to_include nvarchar(max) = NULL, -- List of columns to be included in the MERGE statement&#xD;&#xA; @cols_to_exclude nvarchar(max) = NULL, -- List of columns to be excluded from the MERGE statement&#xD;&#xA; @cols_to_join_on nvarchar(max) = NULL, -- List of columns needed to JOIN the source table to the target table (useful when @table_name is missing a primary key) &#xD;&#xA; @update_only_if_changed bit = 1, -- When 1, only performs an UPDATE operation if an included column in a matched row has changed.&#xD;&#xA; @hash_compare_column nvarchar(128) = NULL, -- When specified, change detection will be based on a SHA2_256 hash of the source data (the hash value will be stored in this @target_table column for later comparison; see Example 16)&#xD;&#xA; @delete_if_not_matched bit = 0, -- When 1, deletes unmatched source rows from target, when 0 source rows will only be used to update existing rows or insert new.&#xD;&#xA; @disable_constraints bit = 0, -- When 1, disables foreign key constraints and enables them after the MERGE statement&#xD;&#xA; @ommit_computed_cols bit = 1, -- When 1, computed columns will not be included in the MERGE statement&#xD;&#xA; @ommit_generated_always_cols bit = 1, -- When 1, GENERATED ALWAYS columns will not be included in the MERGE statement&#xD;&#xA; @include_use_db bit = 1, -- When 1, includes a USE [DatabaseName] statement at the beginning of the generated batch&#xD;&#xA; @results_to_text bit = 0, -- When 1, outputs results to grid/messages window. When 0, outputs MERGE statement in an XML fragment. When NULL, only the @output OUTPUT parameter is returned.&#xD;&#xA; @include_rowsaffected bit = 1, -- When 1, a section is added to the end of the batch which outputs rows affected by the MERGE&#xD;&#xA; @nologo bit = 0, -- When 1, the &quot;About&quot; comment is suppressed from output&#xD;&#xA; @batch_separator nvarchar(50) = 'GO', -- Batch separator to use. Specify NULL to output all statements within a single batch&#xD;&#xA; @output nvarchar(max) = null output -- Use this output parameter to return the generated T-SQL batches to the caller (Hint: specify @batch_separator=NULL to output all statements within a single batch)&#xD;&#xA;)&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[dbo].[spr_BatchStart]">
			<Property Name="BodyScript">
				<Value><![CDATA[

INSERT INTO [ETL].[BatchLog]
           ([StartDateTime]
           ,[EndDateTime]
           ,[Status])
     VALUES
           (GETDATE()
           ,GETDATE()
           ,'Started')]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References Name="[ETL].[BatchLog]" />
				</Entry>
				<Entry>
					<References Name="[ETL].[BatchLog].[StartDateTime]" />
				</Entry>
				<Entry>
					<References Name="[ETL].[BatchLog].[EndDateTime]" />
				</Entry>
				<Entry>
					<References Name="[ETL].[BatchLog].[Status]" />
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="Length" Value="232" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="CREATE proc [dbo].[spr_BatchStart]&#xD;&#xA;as" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[dbo].[spr_deleteFromSourceDataLoadDetails]">
			<Property Name="BodyScript">
				<Value><![CDATA[

DELETE FROM [ETL].[SourceTablesDataLoadDetails] WHERE 
replace(replace([SourceServer],'[',''),']','')=replace(replace(@SourceServer,'[',''),']','') 
AND replace(replace(SourceDatabase,'[',''),']','')=replace(replace(@SourceDatabase ,'[',''),']','')
AND replace(replace(SourceTable,'[',''),']','')=replace(replace(@SourceTable,'[',''),']','')]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References Name="[ETL].[SourceTablesDataLoadDetails]" />
				</Entry>
				<Entry>
					<References Name="[ETL].[SourceTablesDataLoadDetails].[SourceServer]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[spr_deleteFromSourceDataLoadDetails].[@SourceServer]" />
				</Entry>
				<Entry>
					<References Name="[ETL].[SourceTablesDataLoadDetails].[SourceDatabase]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[spr_deleteFromSourceDataLoadDetails].[@SourceDatabase]" />
				</Entry>
				<Entry>
					<References Name="[ETL].[SourceTablesDataLoadDetails].[SourceTable]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[spr_deleteFromSourceDataLoadDetails].[@SourceTable]" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[spr_deleteFromSourceDataLoadDetails].[@SourceServer]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[varchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[spr_deleteFromSourceDataLoadDetails].[@SourceDatabase]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[varchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[spr_deleteFromSourceDataLoadDetails].[@SourceTable]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[varchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="Length" Value="533" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="create PROC [dbo].[spr_deleteFromSourceDataLoadDetails](&#xD;&#xA;@SourceServer varchar(max)&#xD;&#xA;           ,@SourceDatabase varchar(max)&#xD;&#xA;           ,@SourceTable varchar(max)&#xD;&#xA;           &#xD;&#xA;)&#xD;&#xA;as" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[dbo].[spr_fetch_TableQuery]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN
print ('SELECT 

CASE WHEN ORDINAL_POSITION=1 THEN

''SELECT  ''+ ''[''+COLUMN_NAME+'']''

ELSE
''[''+COLUMN_NAME+'']'' 
END

ColumnName

FROM ['+@Linkedserver+'].['+@DBName+'].INFORMATION_SCHEMA.COLUMNS
where TABLE_SCHEMA+''.''+TABLE_NAME='''+@TableName+'''
ORDER BY ORDINAL_POSITION
')

END]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References Name="[dbo].[spr_fetch_TableQuery].[@Linkedserver]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[spr_fetch_TableQuery].[@DBName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[spr_fetch_TableQuery].[@TableName]" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[spr_fetch_TableQuery].[@Linkedserver]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[varchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[spr_fetch_TableQuery].[@DBName]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[varchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[spr_fetch_TableQuery].[@TableName]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[varchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="CreateOffset" Value="87" />
				<Property Name="Length" Value="523" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="--EXEC spr_fetch_TableQuery 'LAPTOP-NI0AKHN4','AdventureWorks2019','Person.Address'&#xD;&#xA;&#xD;&#xA;CREATE PROC [dbo].[spr_fetch_TableQuery] (@Linkedserver varchar(max),@DBName varchar(max),@TableName varchar(max))&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[dbo].[spr_getColumns]">
			<Property Name="BodyScript">
				<Value><![CDATA[
begin
SELECT 
	 col.COLUMN_NAME AS ColumnName
     , col.DATA_TYPE AS DataType
     , col.CHARACTER_MAXIMUM_LENGTH AS MaxLength
	 ,col.NUMERIC_PRECISION
	 ,col.NUMERIC_SCALE
	 , CAST(CASE col.IS_NULLABLE
                WHEN 'NO' THEN 0
                ELSE 1
            END AS bit)AS IsNullable
		, col.COLUMN_DEFAULT AS DefaultSetting
     , COLUMNPROPERTY(OBJECT_ID('[' + col.TABLE_SCHEMA + '].[' + col.TABLE_NAME + ']'), col.COLUMN_NAME, 'IsIdentity')AS IsIdentity
     , COLUMNPROPERTY(OBJECT_ID('[' + col.TABLE_SCHEMA + '].[' + col.TABLE_NAME + ']'), col.COLUMN_NAME, 'IsComputed')AS IsComputed
     , CAST(ISNULL(pk.is_primary_key, 0)AS bit)AS IsPrimaryKey
	 
  FROM [AdventureWorks2019].INFORMATION_SCHEMA.COLUMNS AS col
       LEFT JOIN(SELECT SCHEMA_NAME(o.schema_id)AS TABLE_SCHEMA
                      , o.name AS TABLE_NAME
                      , c.name AS COLUMN_NAME
                      , i.is_primary_key
                   FROM sys.indexes AS i JOIN sys.index_columns AS ic ON i.object_id = ic.object_id
                                                                     AND i.index_id = ic.index_id
                                         JOIN sys.objects AS o ON i.object_id = o.object_id
                                         LEFT JOIN sys.columns AS c ON ic.object_id = c.object_id
                                                                   AND c.column_id = ic.column_id
                  WHERE i.is_primary_key = 1)AS pk ON col.TABLE_NAME = pk.TABLE_NAME
                                                  AND col.TABLE_SCHEMA = pk.TABLE_SCHEMA
                                                  AND col.COLUMN_NAME = pk.COLUMN_NAME
 WHERE 1=1
 and col.DATA_TYPE='decimal'
 and col.TABLE_NAME = 'product'
   --AND col.TABLE_SCHEMA = 'person'
 ORDER BY col.TABLE_NAME, col.ORDINAL_POSITION
 end]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[bit]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[bit]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[spr_getColumns].[@DBName]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[varchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[spr_getColumns].[@TableName]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[varchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="Length" Value="1945" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="CREATE proc spr_getColumns(@DBName varchar(max),@TableName varchar(max))&#xD;&#xA;as" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[dbo].[spr_InsertUpdateSourceDataLoadDetails]">
			<Property Name="BodyScript">
				<Value><![CDATA[

DELETE FROM [ETL].[SourceTablesDataLoadDetails] WHERE 
replace(replace([SourceServer],'[',''),']','')=replace(replace(@SourceServer,'[',''),']','') 
AND replace(replace(SourceDatabase,'[',''),']','')=replace(replace(@SourceDatabase ,'[',''),']','')
AND replace(replace(SourceTable,'[',''),']','')=replace(replace(@SourceTable,'[',''),']','')

INSERT INTO [ETL].[SourceTablesDataLoadDetails]
           ([SourceServer]
           ,[SourceDatabase]
           ,[SourceTable]
           ,[SourceQuery]
		   ,SourceTableColumnNames
           ,[LandingTargetTable]
           ,[TargetTable]
           ,[DataLoadType]
           ,[HighWaterMarkColumn]
           ,[AutoIdentityColumn]
           ,[KeyColumns]
		   --,InsertLandingTargetQuery
		  -- ,InsertUpdateTargetQuery
		   )
     VALUES
           (@SourceServer
           ,@SourceDatabase
           ,@SourceTable
           ,@SourceQuery
		   ,@SourceTableColumnNames
           ,@LandingTargetTable
           ,@TargetTable
           ,@DataLoadType
           ,@HighWaterMarkColumn
           ,@AutoIdentityColumn
           ,@KeyColumns
		  -- ,@LandingTargetQuery
		  -- ,@TargetQuery
		   )]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References Name="[ETL].[SourceTablesDataLoadDetails]" />
				</Entry>
				<Entry>
					<References Name="[ETL].[SourceTablesDataLoadDetails].[SourceServer]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[spr_InsertUpdateSourceDataLoadDetails].[@SourceServer]" />
				</Entry>
				<Entry>
					<References Name="[ETL].[SourceTablesDataLoadDetails].[SourceDatabase]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[spr_InsertUpdateSourceDataLoadDetails].[@SourceDatabase]" />
				</Entry>
				<Entry>
					<References Name="[ETL].[SourceTablesDataLoadDetails].[SourceTable]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[spr_InsertUpdateSourceDataLoadDetails].[@SourceTable]" />
				</Entry>
				<Entry>
					<References Name="[ETL].[SourceTablesDataLoadDetails].[SourceQuery]" />
				</Entry>
				<Entry>
					<References Name="[ETL].[SourceTablesDataLoadDetails].[SourceTableColumnNames]" />
				</Entry>
				<Entry>
					<References Name="[ETL].[SourceTablesDataLoadDetails].[LandingTargetTable]" />
				</Entry>
				<Entry>
					<References Name="[ETL].[SourceTablesDataLoadDetails].[TargetTable]" />
				</Entry>
				<Entry>
					<References Name="[ETL].[SourceTablesDataLoadDetails].[DataLoadType]" />
				</Entry>
				<Entry>
					<References Name="[ETL].[SourceTablesDataLoadDetails].[HighWaterMarkColumn]" />
				</Entry>
				<Entry>
					<References Name="[ETL].[SourceTablesDataLoadDetails].[AutoIdentityColumn]" />
				</Entry>
				<Entry>
					<References Name="[ETL].[SourceTablesDataLoadDetails].[KeyColumns]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[spr_InsertUpdateSourceDataLoadDetails].[@SourceQuery]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[spr_InsertUpdateSourceDataLoadDetails].[@SourceTableColumnNames]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[spr_InsertUpdateSourceDataLoadDetails].[@LandingTargetTable]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[spr_InsertUpdateSourceDataLoadDetails].[@TargetTable]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[spr_InsertUpdateSourceDataLoadDetails].[@DataLoadType]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[spr_InsertUpdateSourceDataLoadDetails].[@HighWaterMarkColumn]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[spr_InsertUpdateSourceDataLoadDetails].[@AutoIdentityColumn]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[spr_InsertUpdateSourceDataLoadDetails].[@KeyColumns]" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[spr_InsertUpdateSourceDataLoadDetails].[@SourceServer]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[varchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[spr_InsertUpdateSourceDataLoadDetails].[@SourceDatabase]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[varchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[spr_InsertUpdateSourceDataLoadDetails].[@SourceTable]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[varchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[spr_InsertUpdateSourceDataLoadDetails].[@SourceQuery]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[varchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[spr_InsertUpdateSourceDataLoadDetails].[@SourceTableColumnNames]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[varchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[spr_InsertUpdateSourceDataLoadDetails].[@LandingTargetTable]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[varchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[spr_InsertUpdateSourceDataLoadDetails].[@TargetTable]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[varchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[spr_InsertUpdateSourceDataLoadDetails].[@DataLoadType]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[varchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[spr_InsertUpdateSourceDataLoadDetails].[@HighWaterMarkColumn]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[varchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[spr_InsertUpdateSourceDataLoadDetails].[@AutoIdentityColumn]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[varchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[spr_InsertUpdateSourceDataLoadDetails].[@KeyColumns]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[varchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="Length" Value="1779" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="CREATE PROC [dbo].[spr_InsertUpdateSourceDataLoadDetails](&#xD;&#xA;@SourceServer varchar(max)&#xD;&#xA;           ,@SourceDatabase varchar(max)&#xD;&#xA;           ,@SourceTable varchar(max)&#xD;&#xA;           ,@SourceQuery varchar(max)&#xD;&#xA;&#x9;&#x9;   ,@SourceTableColumnNames varchar(max)&#xD;&#xA;           ,@LandingTargetTable varchar(max)&#xD;&#xA;           ,@TargetTable varchar(max)&#xD;&#xA;           ,@DataLoadType varchar(max)&#xD;&#xA;           ,@HighWaterMarkColumn varchar(max)&#xD;&#xA;           ,@AutoIdentityColumn varchar(max)&#xD;&#xA;           ,@KeyColumns varchar(max)&#xD;&#xA;&#x9;&#x9;  -- ,@LandingTargetQuery varchar(max)&#xD;&#xA;&#x9;&#x9; --  ,@TargetQuery varchar(max)&#xD;&#xA;)&#xD;&#xA;as" />
			</Annotation>
		</Element>
		<Element Type="SqlTable" Name="[dbo].[TableLoadReporttest]">
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="Columns">
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[TableLoadReporttest].[SourceTableName]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="500" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[TableLoadReporttest].[TargetTableName]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="500" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[TableLoadReporttest].[RowCount]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[TableLoadReporttest].[RowsInserted]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[TableLoadReporttest].[RowsUpated]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[TableLoadReporttest].[RowsDeleted]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[TableLoadReporttest].[AsAtDate]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[datetime]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[TableLoadReporttest].[Status]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="100" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[varchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[TableLoadReporttest].[Comments]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlSchema" Name="[ETL]">
			<Relationship Name="Authorizer">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlTable" Name="[ETL].[BatchLog]">
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="Columns">
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[ETL].[BatchLog].[BatchLogID]">
						<Property Name="IsNullable" Value="False" />
						<Property Name="IsIdentity" Value="True" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[ETL].[BatchLog].[StartDateTime]">
						<Property Name="IsNullable" Value="False" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[datetime]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
						<Annotation Type="SqlInlineConstraintAnnotation" Disambiguator="3" />
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[ETL].[BatchLog].[EndDateTime]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[datetime]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[ETL].[BatchLog].[Status]">
						<Property Name="IsNullable" Value="False" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="50" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[varchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[ETL].[BatchLog].[Comments]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[ETL]" />
				</Entry>
			</Relationship>
			<Annotation Type="SqlInlineConstraintAnnotation" Disambiguator="4" />
			<Annotation Type="SqlInlineConstraintAnnotation" Disambiguator="5" />
		</Element>
		<Element Type="SqlCheckConstraint" Name="[ETL].[CHK_BatchLog]">
			<Property Name="CheckExpressionScript">
				<Value><![CDATA[[Status]='Error' OR [Status]='Completed' OR [Status]='InProgress' OR [Status]='Started']]></Value>
			</Property>
			<Relationship Name="CheckExpressionDependencies">
				<Entry>
					<References Name="[ETL].[BatchLog].[Status]" />
				</Entry>
			</Relationship>
			<Relationship Name="DefiningTable">
				<Entry>
					<References Name="[ETL].[BatchLog]" />
				</Entry>
			</Relationship>
			<AttachedAnnotation Disambiguator="5" />
		</Element>
		<Element Type="SqlCheckConstraint" Name="[ETL].[CHK_TableLoad]">
			<Property Name="CheckExpressionScript">
				<Value><![CDATA[[Status]='Error' OR [Status]='Completed' OR [Status]='InProgress' OR [Status]='Started']]></Value>
			</Property>
			<Relationship Name="CheckExpressionDependencies">
				<Entry>
					<References Name="[ETL].[TableLoadReport].[Status]" />
				</Entry>
			</Relationship>
			<Relationship Name="DefiningTable">
				<Entry>
					<References Name="[ETL].[TableLoadReport]" />
				</Entry>
			</Relationship>
			<Annotation Type="SqlInlineConstraintAnnotation" Disambiguator="6" />
		</Element>
		<Element Type="SqlDefaultConstraint" Name="[ETL].[DF__BatchLog__StartD__4316F928]">
			<Property Name="DefaultExpressionScript">
				<Value><![CDATA[(getdate())]]></Value>
			</Property>
			<Relationship Name="DefiningTable">
				<Entry>
					<References Name="[ETL].[BatchLog]" />
				</Entry>
			</Relationship>
			<Relationship Name="ForColumn">
				<Entry>
					<References Name="[ETL].[BatchLog].[StartDateTime]" />
				</Entry>
			</Relationship>
			<AttachedAnnotation Disambiguator="3" />
		</Element>
		<Element Type="SqlPrimaryKeyConstraint" Name="[ETL].[PK_BatchLog]">
			<Relationship Name="ColumnSpecifications">
				<Entry>
					<Element Type="SqlIndexedColumnSpecification">
						<Relationship Name="Column">
							<Entry>
								<References Name="[ETL].[BatchLog].[BatchLogID]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="DefiningTable">
				<Entry>
					<References Name="[ETL].[BatchLog]" />
				</Entry>
			</Relationship>
			<AttachedAnnotation Disambiguator="4" />
		</Element>
		<Element Type="SqlPrimaryKeyConstraint" Name="[ETL].[PK_TableLoadReport]">
			<Relationship Name="ColumnSpecifications">
				<Entry>
					<Element Type="SqlIndexedColumnSpecification">
						<Relationship Name="Column">
							<Entry>
								<References Name="[ETL].[TableLoadReport].[TableLoadReportID]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="DefiningTable">
				<Entry>
					<References Name="[ETL].[TableLoadReport]" />
				</Entry>
			</Relationship>
			<Annotation Type="SqlInlineConstraintAnnotation" Disambiguator="7" />
		</Element>
		<Element Type="SqlPrimaryKeyConstraint" Name="[ETL].[PK_TablesObjectsCreation]">
			<Relationship Name="ColumnSpecifications">
				<Entry>
					<Element Type="SqlIndexedColumnSpecification">
						<Relationship Name="Column">
							<Entry>
								<References Name="[ETL].[SourceTablesDataLoadDetails].[ID]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="DefiningTable">
				<Entry>
					<References Name="[ETL].[SourceTablesDataLoadDetails]" />
				</Entry>
			</Relationship>
			<Annotation Type="SqlInlineConstraintAnnotation" Disambiguator="8" />
		</Element>
		<Element Type="SqlTable" Name="[ETL].[SourceTablesDataLoadDetails]">
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="Columns">
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[ETL].[SourceTablesDataLoadDetails].[ID]">
						<Property Name="IsNullable" Value="False" />
						<Property Name="IsIdentity" Value="True" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[ETL].[SourceTablesDataLoadDetails].[SourceServer]">
						<Property Name="IsNullable" Value="False" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="250" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[varchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[ETL].[SourceTablesDataLoadDetails].[SourceDatabase]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[varchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[ETL].[SourceTablesDataLoadDetails].[SourceTable]">
						<Property Name="IsNullable" Value="False" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="150" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[varchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[ETL].[SourceTablesDataLoadDetails].[SourceQuery]">
						<Property Name="IsNullable" Value="False" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[varchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[ETL].[SourceTablesDataLoadDetails].[SourceTableColumnNames]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[varchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[ETL].[SourceTablesDataLoadDetails].[LandingTargetTable]">
						<Property Name="IsNullable" Value="False" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="150" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[varchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[ETL].[SourceTablesDataLoadDetails].[TargetTable]">
						<Property Name="IsNullable" Value="False" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="150" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[varchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[ETL].[SourceTablesDataLoadDetails].[DataLoadType]">
						<Property Name="IsNullable" Value="False" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="150" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[varchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[ETL].[SourceTablesDataLoadDetails].[HighWaterMarkColumn]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="150" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[varchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[ETL].[SourceTablesDataLoadDetails].[AutoIdentityColumn]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="150" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[varchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[ETL].[SourceTablesDataLoadDetails].[KeyColumns]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="150" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[varchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[ETL]" />
				</Entry>
			</Relationship>
			<AttachedAnnotation Disambiguator="8" />
		</Element>
		<Element Type="SqlTable" Name="[ETL].[TableLoadReport]">
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="Columns">
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[ETL].[TableLoadReport].[TableLoadReportID]">
						<Property Name="IsNullable" Value="False" />
						<Property Name="IsIdentity" Value="True" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[bigint]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[ETL].[TableLoadReport].[SourceTableName]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="500" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[ETL].[TableLoadReport].[TargetTableName]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="500" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[ETL].[TableLoadReport].[RowCount]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[ETL].[TableLoadReport].[RowsInserted]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[ETL].[TableLoadReport].[RowsUpated]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[ETL].[TableLoadReport].[RowsDeleted]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[ETL].[TableLoadReport].[AsAtDate]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[datetime]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[ETL].[TableLoadReport].[Status]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="100" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[varchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[ETL].[TableLoadReport].[Comments]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[ETL]" />
				</Entry>
			</Relationship>
			<AttachedAnnotation Disambiguator="7" />
			<AttachedAnnotation Disambiguator="6" />
		</Element>
	</Model>
</DataSchemaModel>